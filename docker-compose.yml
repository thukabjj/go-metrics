version: "3"
services:
  go-service-a:
    build: ./service-a/.
    ports:
      - 8080:8080
    environment:
      - JAEGER_AGENT_HOST=http://jaeger:14268/api/traces
  go-service-b:
    build: ./service-b/.
    ports:
      - 8081:8081
    environment:
      - JAEGER_AGENT_HOST=http://jaeger:14268/api/traces
  java-service-c:
    build: ./service-c/.
    ports:
      - 8083:8083
    environment:
      - JAEGER_AGENT_HOST=http://jaeger:14268/api/traces
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./infra/prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    depends_on:
      - go-service-a
      - go-service-b
  grafana:
      image: grafana/grafana:latest
      volumes:
        - ./infra/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      ports:
        - 3000:3000
      depends_on:
        - prometheus
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "14268:14268"   # jaeger-collector HTTP server (tracer provider)
      - "16686:16686"
    # Collector
  otel-collector:
    image: otel/opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
